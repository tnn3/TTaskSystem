@model IEnumerable<Domain.ProjectTask>

@{
    ViewData["Title"] = "Index";
    if (User.IsInRole("Admin"))
    {
        Layout = "_AdminLayout";
        ViewData["Site"] = "Tasks";
    }
}

<h2>Index</h2>

<p>
    <a asp-controller="ProjectTasks" asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AssignedTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Changed)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    <tr>
        <td>
            <a asp-action="Details" asp-route-id="@item.ProjectTaskId">@Html.DisplayFor(modelItem => item.Name)</a>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Priority.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AssignedTo.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status.Status.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DueDate)
        </td>
        <td>
            @(item.Changed == null ? Html.DisplayFor(modelItem => item.Created) : Html.DisplayFor(modelItem => item.Changed))
        </td>
        <td>
            <a asp-action="Edit" asp-route-id="@item.ProjectTaskId">Edit</a> |
            <a asp-action="Delete" asp-route-id="@item.ProjectTaskId">Delete</a>
        </td>
    </tr>
}
    </tbody>
</table>
